<?php

namespace frontend\models;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-05 at 09:01:47.
 */
class AvailableSkillsSearchTest extends \tests\codeception\frontend\unit\DbTestCase
{
    /**
     * @var AvailableSkillsSearch
     */
    protected $object;

    public function fixtures()
    {
        return ['employee' => [
                'class' => \tests\codeception\common\fixtures\EmployeeFixture::className(),
            ],
            'skill' => [
                'class' => \tests\codeception\common\fixtures\SkillFixture::className(),
            ],
            'employee_skill' => [
                'class' => \tests\codeception\common\fixtures\EmployeeSkillFixture::className(),
            ],
            'category' => [
                'class' => \tests\codeception\common\fixtures\CategoryFixture::className(),
            ],
        ];
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @covers frontend\models\AvailableSkillsSearch::search
     * @expectedException yii\base\UnknownPropertyException
     */
    public function testSearchException()
    {
        $searchModel = new AvailableSkillsSearch(['test' => 1]);
    }

    /**
     * @covers frontend\models\AvailableSkillsSearch::search
     */
    public function testSearch()
    {
        $searchModel = new AvailableSkillsSearch(['for_employee_id' => 1]);
        $this->assertCount(0, $searchModel->search([])->models);

        $searchModel = new AvailableSkillsSearch(['for_employee_id' => 2]);
        $this->assertCount(5, $searchModel->search([])->models);

        $searchModel = new AvailableSkillsSearch(['for_employee_id' => 3]);
        $this->assertCount(10, $searchModel->search([])->models);

        $searchModel = new AvailableSkillsSearch(['for_employee_id' => 4]);
        $params      = [
            $searchModel->formName() => [
                'category_name' => 'CATEGORY1'
            ]
        ];
        $this->assertCount(3, $searchModel->search($params)->models);
        $params      = [
            $searchModel->formName() => [
                'category_name' => 'CATEGORY1',
                'name'=> 'SKILL11'

            ]
        ];
        $this->assertCount(1, $searchModel->search($params)->models);
    }

    /**
     * @covers frontend\models\AvailableSkillsSearch::getCategory_name
     */
    public function testGetCategory_name()
    {
        $searchModel = new AvailableSkillsSearch();
        $searchModel->setCategory_name('test123');
        $this->assertEquals('test123', $searchModel->category_name);

        $searchModel->category_name = 'test1234';
        $this->assertEquals('test1234', $searchModel->getCategory_name());
    }

    /**
     * @covers frontend\models\AvailableSkillsSearch::getFor_employee_id
     */
    public function testGetFor_employee_id()
    {
        $searchModel = new AvailableSkillsSearch();
        $searchModel->setFor_employee_id(1);
        $this->assertEquals(1, $searchModel->for_employee_id);

        $searchModel->for_employee_id = 2;
        $this->assertEquals(2, $searchModel->getFor_employee_id());
    }
}