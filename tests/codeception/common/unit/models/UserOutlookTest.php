<?php

namespace common\models;

use tests\codeception\common\fixtures\UserFixture;
use tests\codeception\common\unit\DbTestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-01-31 at 12:45:02.
 */
class UserOutlookTest extends DbTestCase
{
    /**
     * @var UserOutlook
     */
    protected $object;
    protected $property;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        parent::setUp();

        \jarekkozak\sys\DependencyManager::register([
            'jarekkozak\sys\IProperties' => [
                'class' => 'jarekkozak\sys\PropertiesFile',
                'filename' => '$HOME/.secret/skills-secret'
            ],
            'jk\sys\ILog' => 'jarekkozak\sys\LogConsole'
        ]);
        $this->property = \Yii::$container->get('jarekkozak\sys\IProperties');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @covers common\models\UserOutlook::validatePassword
     */
    public function testValidatePassword()
    {

        $email          = $this->property->getProperty('exchangeUsername');
        $password       = $this->property->getProperty('exchangePassword');
        $user           = new UserOutlook();
        $user->username = 'test';
        $user->email    = $email;
        $user->setPassword($password);
        $user->generateAuthKey();
        $this->assertTrue($user->checkPasswordPolicy($password));
    }

    /**
     * @covers common\models\UserOutlook::validatePassword
     */
    public function testValidatePasswordError()
    {

        $email          = $this->property->getProperty('exchangeUsername');
        $password       = 'bad-password';
        $user           = new UserOutlook();
        $user->username = 'test';
        $user->email    = $email;
        $user->setPassword($password);
        $user->generateAuthKey();
        $this->assertFalse($user->checkPasswordPolicy($password));
        
    }



    /**
     * @covers common\models\UserOutlook::checkPasswordPolicy
     */
    public function testCheckPasswordPolicy()
    {

    }

    /**
     * @covers common\models\UserOutlook::findByUsername
     * @todo   Implement testFindByUsername().
     */
    public function testFindByUsername()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @inheritdoc
     */
    public function fixtures()
    {
        return [
            'user' => [
                'class' => UserFixture::className(),
                'dataFile' => '@tests/codeception/common/unit/fixtures/data/models/outlook_user.php'
            ],
        ];
    }
}