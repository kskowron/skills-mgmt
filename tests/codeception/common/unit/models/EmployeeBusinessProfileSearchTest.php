<?php

namespace common\models;

use tests\codeception\common\fixtures\EmployeeBusinessProfileFixture;
use tests\codeception\console\unit\DbTestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-04 at 09:59:16.
 */
class EmployeeBusinessProfileSearchTest extends DbTestCase
{
    /**
     * @var EmployeeBusinessProfileSearch
     */
    protected $object;

    /**
     * @inheritdoc
     */
    public function fixtures()
    {
        return [
            'user' => [
                'class' => EmployeeBusinessProfileFixture::className(),
            ],
        ];
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->object = new EmployeeBusinessProfileSearch;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @covers common\models\EmployeeBusinessProfileSearch::search
     */
    public function testSearch()
    {
        $model = new EmployeeBusinessProfileSearch();
        $params = [
            'EmployeeBusinessProfileSearch' => [
                'employee_id' => 1
            ]
        ];
        $data  = $model->search($params);
        $this->assertCount(3, $data->models);

        $params = [
            'EmployeeBusinessProfileSearch' => [
                'employee_id' => 2
            ]
        ];
        $data  = $model->search($params);
        $this->assertCount(2, $data->models);

        $params = [
            'EmployeeBusinessProfileSearch' => [
                'employee_id' => 3
            ]
        ];
        $data  = $model->search($params);
        $this->assertCount(0, $data->models);
    }

    /**
     * @covers common\models\EmployeeBusinessProfileSearch::employeeProfilesSearch
     */
    public function testEmployeeProfilesSearch()
    {
        $data  = $this->object->search4employee(1);
        $this->assertCount(3, $data->models);

        $data  = $this->object->search4employee(2);
        $this->assertCount(2, $data->models);

        $data  = $this->object->search4employee(3);
        $this->assertCount(0, $data->models);
    }

    /**
     * @covers common\models\EmployeeBusinessProfileSearch::employeeProfilesSearch
     */
    public function testEmployeeProfilesSearchNull()
    {
        $data  = $this->object->search4employee(NULL);
        $this->assertCount(0, $data->models);
        $data  = $this->object->search4employee('');
        $this->assertCount(0, $data->models);

    }

}